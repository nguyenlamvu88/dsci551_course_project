import streamlit as st
from full import insert_property_into_state_collection, retrieve_property_data, update_property_by_id_or_address, delete_property_by_id_or_address

st.title('Property Management System')

# Sidebar for navigation
operation = st.sidebar.selectbox('Choose Operation', ['Insert Property', 'Search Property', 'Update Property', 'Delete Property'])

if operation == 'Insert Property':
    st.header('Insert New Property')
    # UI elements to collect property details
    state = st.selectbox('State', ['Choose a state'] + states)  # Assuming 'states' is imported from your backend module
    city = st.text_input('City')
    address = st.text_input('Address')
    zip_code = st.text_input('ZIP Code')
    price = st.number_input('Price', min_value=0)
    bedrooms = st.number_input('Bedrooms', min_value=0, format='%d')
    bathrooms = st.number_input('Bathrooms', min_value=0.0)
    square_footage = st.number_input('Square Footage', min_value=0, format='%d')
    listing_type = st.selectbox('Type', ['sale', 'rent'])
    date_listed = st.date_input('Date Listed')
    description = st.text_area('Description')
    # Assuming images are URLs for simplicity
    images = st.text_input('Image URLs (comma-separated)')

    if st.button('Insert Property'):
        # Prepare the property data dictionary
        property_data = {
            'state': state, 'city': city, 'address': address,
            'zip_code': zip_code, 'price': price, 'bedrooms': bedrooms,
            'bathrooms': bathrooms, 'square_footage': square_footage,
            'type': listing_type, 'date_listed': str(date_listed),
            'description': description, 'images': images.split(',')
        }
        # Call the backend function to insert the data
        if insert_property_into_state_collection(property_data):
            st.success('Property inserted successfully!')
        else:
            st.error('Failed to insert the property.')

elif operation == 'Search Property':
    st.header('Search for a Property')
    # UI elements to collect search criteria
    state = st.selectbox('State', ['Choose a state'] + states)
    search_id = st.text_input('Custom ID')
    search_address = st.text_input('Address')
    search_type = st.selectbox('Type', ['Any', 'sale', 'rent'])

    if st.button('Search'):
        search_criteria = {'state': state}
        if search_id:
            search_criteria['custom_id'] = search_id
        if search_address:
            search_criteria['address'] = search_address
        if search_type != 'Any':
            search_criteria['type'] = search_type

        property_data = retrieve_property_data(search_criteria)
        if property_data:
            st.json(property_data)
        else:
            st.info('No property found matching the criteria.')

# Continue with UI for 'Update Property' and 'Delete Property' operations following a similar pattern

# To run the Streamlit app, use the command: streamlit run app.py
